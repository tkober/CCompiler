Grammar

    0 $accept: document $end

    1 document: /* empty */
    2         | translation_unit

    3 translation_unit: external_declaration
    4                 | translation_unit external_declaration

    5 external_declaration: function_definition
    6                     | declaration

    7 function_definition: declaration_specification declarator declaration_list compound_statement
    8                    | declarator declaration_list compound_statement
    9                    | declaration_specification declarator compound_statement
   10                    | declarator compound_statement

   11 declaration: declaration_specification init_declarator_list LINE_END
   12            | declaration_specification LINE_END

   13 declaration_list: declaration
   14                 | declaration_list declaration

   15 compound_statement: OB_CURLY declaration_list statement_list CB_CURLY
   16                   | OB_CURLY statement_list CB_CURLY
   17                   | OB_CURLY declaration_list CB_CURLY
   18                   | OB_CURLY CB_CURLY

   19 statement_list: statement
   20               | statement_list statement

   21 statement: labeled_statement
   22          | expression_statement
   23          | compound_statement
   24          | selection_statement
   25          | iteration_statement
   26          | jump_statement

   27 labeled_statement: ID COLON statement

   28 expression_statement: expression LINE_END
   29                     | LINE_END

   30 selection_statement: IF OB expression CB statement
   31                    | IF OB expression CB statement ELSE statement

   32 iteration_statement: WHILE OB expression CB statement

   33 jump_statement: GOTO ID LINE_END
   34               | CONTINUE LINE_END
   35               | BREAK LINE_END
   36               | RETURN expression LINE_END
   37               | RETURN LINE_END

   38 declaration_specification: type_specification
   39                          | type_specification declaration_specification

   40 type_specification: VOID
   41                   | CHAR
   42                   | SHORT
   43                   | INT
   44                   | LONG
   45                   | FLOAT
   46                   | DOUBLE
   47                   | SIGNED
   48                   | UNSIGNED

   49 init_declarator_list: init_declarator
   50                     | init_declarator_list COMMA init_declarator

   51 init_declarator: declarator
   52                | declarator ASSIGN_OP initializer

   53 declarator: ID
   54           | OB declarator CB
   55           | declarator OB parameter_list CB
   56           | declarator OB CB

   57 parameter_list: parameter_declaration
   58               | parameter_list COMMA parameter_declaration

   59 parameter_declaration: declaration_specification declarator
   60                      | declaration_specification

   61 initializer: assignment_expression
   62            | OB_CURLY initializer_list CB_CURLY
   63            | OB_CURLY initializer_list COMMA CB_CURLY

   64 initializer_list: initializer
   65                 | initializer_list COMMA initializer

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 conditional_expression: logical_or_expression
   69                       | logical_or_expression QUESTION_MARK expression COLON conditional_expression

   70 unary_expression: postfix_expression
   71                 | prefix_operator unary_expression
   72                 | unary_operator

   73 prefix_operator: UNARY_INCREMENT_OP
   74                | UNARY_DECREMENT_OP

   75 assignment_operator: ASSIGN_OP
   76                    | ASSIGN_MUL_OP
   77                    | ASSIGN_DIV_OP
   78                    | ASSIGN_MOD_OP
   79                    | ASSIGN_ADD_OP
   80                    | ASSIGN_SUB_OP
   81                    | ASSIGN_SHIFT_LEFT_OP
   82                    | ASSIGN_SHIFT_RIGHT_OP
   83                    | ASSIGN_BITWISE_AND_OP
   84                    | ASSIGN_BITWISE_XOR_OP
   85                    | ASSIGN_BITWISE_OR_OP

   86 logical_or_expression: logical_and_expression
   87                      | logical_or_expression LOGICAL_OR_OP logical_and_expression

   88 logical_and_expression: inclusive_or_expression
   89                       | logical_and_expression LOGICAL_AND_OP inclusive_or_expression

   90 inclusive_or_expression: exclusive_or_expression
   91                        | inclusive_or_expression OR_OP exclusive_or_expression

   92 exclusive_or_expression: and_expression
   93                        | exclusive_or_expression EXCLUSIVE_OR_OP and_expression

   94 and_expression: equality_expression
   95               | and_expression AND_OP equality_expression

   96 equality_expression: relational_expression
   97                    | equality_expression equality_operator relational_expression

   98 equality_operator: EQUAL_OP
   99                  | NOT_EQUAL_OP

  100 relational_expression: shift_expression
  101                      | relational_expression compare_operator shift_expression

  102 compare_operator: LT_OP
  103                 | GT_OP
  104                 | LE_OP
  105                 | GE_OP

  106 shift_expression: additive_expression
  107                 | shift_expression shift_operator additive_expression

  108 shift_operator: SHIFT_LEFT_OP
  109               | SHIFT_RIGHT_OP

  110 additive_expression: multiplicative_expression
  111                    | additive_expression additive_operator multiplicative_expression

  112 additive_operator: ADD_OP
  113                  | SUB_OP

  114 multiplicative_expression: unary_expression
  115                          | multiplicative_expression multiplicative_operator unary_expression

  116 multiplicative_operator: MUL_OP
  117                        | DIV_OP
  118                        | MOD_OP

  119 expression: assignment_expression
  120           | expression COMMA assignment_expression

  121 postfix_expression: primary_expression
  122                   | postfix_expression OB argument_expression_list CB
  123                   | postfix_expression OB CB
  124                   | postfix_expression postfix_operator

  125 postfix_operator: UNARY_INCREMENT_OP
  126                 | UNARY_DECREMENT_OP

  127 primary_expression: ID
  128                   | const
  129                   | STRING
  130                   | OB expression CB

  131 argument_expression_list: assignment_expression
  132                         | argument_expression_list COMMA assignment_expression

  133 const: CHAR_CONST
  134      | INT_CONST
  135      | FLOAT_CONST

  136 unary_operator: AND_OP
  137               | MUL_OP
  138               | ADD_OP
  139               | SUB_OP
  140               | BITWISE_NOT_OP
  141               | NOT_OP


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 40
CHAR (259) 41
SHORT (260) 42
INT (261) 43
LONG (262) 44
FLOAT (263) 45
DOUBLE (264) 46
SIGNED (265) 47
UNSIGNED (266) 48
ID (267) 27 33 53 127
STRING (268) 129
CHAR_CONST (269) 133
INT_CONST (270) 134
FLOAT_CONST (271) 135
ASSIGN_OP (272) 52 75
ASSIGN_MUL_OP (273) 76
ASSIGN_DIV_OP (274) 77
ASSIGN_MOD_OP (275) 78
ASSIGN_ADD_OP (276) 79
ASSIGN_SUB_OP (277) 80
ASSIGN_SHIFT_LEFT_OP (278) 81
ASSIGN_SHIFT_RIGHT_OP (279) 82
ASSIGN_BITWISE_AND_OP (280) 83
ASSIGN_BITWISE_XOR_OP (281) 84
ASSIGN_BITWISE_OR_OP (282) 85
UNARY_INCREMENT_OP (283) 73 125
UNARY_DECREMENT_OP (284) 74 126
BITWISE_NOT_OP (285) 140
MUL_OP (286) 116 137
DIV_OP (287) 117
ADD_OP (288) 112 138
SUB_OP (289) 113 139
NOT_OP (290) 141
MOD_OP (291) 118
AND_OP (292) 95 136
OR_OP (293) 91
LOGICAL_OR_OP (294) 87
LOGICAL_AND_OP (295) 89
EXCLUSIVE_OR_OP (296) 93
EQUAL_OP (297) 98
NOT_EQUAL_OP (298) 99
LT_OP (299) 102
GT_OP (300) 103
LE_OP (301) 104
GE_OP (302) 105
SHIFT_LEFT_OP (303) 108
SHIFT_RIGHT_OP (304) 109
LINE_END (305) 11 12 28 29 33 34 35 36 37
COLON (306) 27 69
COMMA (307) 50 58 63 65 120 132
QUESTION_MARK (308) 69
OB (309) 30 31 32 54 55 56 122 123 130
CB (310) 30 31 32 54 55 56 122 123 130
OB_CURLY (311) 15 16 17 18 62 63
CB_CURLY (312) 15 16 17 18 62 63
BREAK (313) 35
CONTINUE (314) 34
WHILE (315) 32
RETURN (316) 36 37
IF (317) 30 31
ELSE (318) 31
GOTO (319) 33


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
document (66)
    on left: 1 2, on right: 0
translation_unit (67)
    on left: 3 4, on right: 2 4
external_declaration (68)
    on left: 5 6, on right: 3 4
function_definition (69)
    on left: 7 8 9 10, on right: 5
declaration (70)
    on left: 11 12, on right: 6 13 14
declaration_list (71)
    on left: 13 14, on right: 7 8 14 15 17
compound_statement (72)
    on left: 15 16 17 18, on right: 7 8 9 10 23
statement_list (73)
    on left: 19 20, on right: 15 16 20
statement (74)
    on left: 21 22 23 24 25 26, on right: 19 20 27 30 31 32
labeled_statement (75)
    on left: 27, on right: 21
expression_statement (76)
    on left: 28 29, on right: 22
selection_statement (77)
    on left: 30 31, on right: 24
iteration_statement (78)
    on left: 32, on right: 25
jump_statement (79)
    on left: 33 34 35 36 37, on right: 26
declaration_specification (80)
    on left: 38 39, on right: 7 9 11 12 39 59 60
type_specification (81)
    on left: 40 41 42 43 44 45 46 47 48, on right: 38 39
init_declarator_list (82)
    on left: 49 50, on right: 11 50
init_declarator (83)
    on left: 51 52, on right: 49 50
declarator (84)
    on left: 53 54 55 56, on right: 7 8 9 10 51 52 54 55 56 59
parameter_list (85)
    on left: 57 58, on right: 55 58
parameter_declaration (86)
    on left: 59 60, on right: 57 58
initializer (87)
    on left: 61 62 63, on right: 52 64 65
initializer_list (88)
    on left: 64 65, on right: 62 63 65
assignment_expression (89)
    on left: 66 67, on right: 61 67 119 120 131 132
conditional_expression (90)
    on left: 68 69, on right: 66 69
unary_expression (91)
    on left: 70 71 72, on right: 67 71 114 115
prefix_operator (92)
    on left: 73 74, on right: 71
assignment_operator (93)
    on left: 75 76 77 78 79 80 81 82 83 84 85, on right: 67
logical_or_expression (94)
    on left: 86 87, on right: 68 69 87
logical_and_expression (95)
    on left: 88 89, on right: 86 87 89
inclusive_or_expression (96)
    on left: 90 91, on right: 88 89 91
exclusive_or_expression (97)
    on left: 92 93, on right: 90 91 93
and_expression (98)
    on left: 94 95, on right: 92 93 95
equality_expression (99)
    on left: 96 97, on right: 94 95 97
equality_operator (100)
    on left: 98 99, on right: 97
relational_expression (101)
    on left: 100 101, on right: 96 97 101
compare_operator (102)
    on left: 102 103 104 105, on right: 101
shift_expression (103)
    on left: 106 107, on right: 100 101 107
shift_operator (104)
    on left: 108 109, on right: 107
additive_expression (105)
    on left: 110 111, on right: 106 107 111
additive_operator (106)
    on left: 112 113, on right: 111
multiplicative_expression (107)
    on left: 114 115, on right: 110 111 115
multiplicative_operator (108)
    on left: 116 117 118, on right: 115
expression (109)
    on left: 119 120, on right: 28 30 31 32 36 69 120 130
postfix_expression (110)
    on left: 121 122 123 124, on right: 70 122 123 124
postfix_operator (111)
    on left: 125 126, on right: 124
primary_expression (112)
    on left: 127 128 129 130, on right: 121
argument_expression_list (113)
    on left: 131 132, on right: 122 132
const (114)
    on left: 133 134 135, on right: 128
unary_operator (115)
    on left: 136 137 138 139 140 141, on right: 72


state 0

    0 $accept: . document $end

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    ID        shift, and go to state 10
    OB        shift, and go to state 11

    $default  reduce using rule 1 (document)

    document                   go to state 12
    translation_unit           go to state 13
    external_declaration       go to state 14
    function_definition        go to state 15
    declaration                go to state 16
    declaration_specification  go to state 17
    type_specification         go to state 18
    declarator                 go to state 19


state 1

   40 type_specification: VOID .

    $default  reduce using rule 40 (type_specification)


state 2

   41 type_specification: CHAR .

    $default  reduce using rule 41 (type_specification)


state 3

   42 type_specification: SHORT .

    $default  reduce using rule 42 (type_specification)


state 4

   43 type_specification: INT .

    $default  reduce using rule 43 (type_specification)


state 5

   44 type_specification: LONG .

    $default  reduce using rule 44 (type_specification)


state 6

   45 type_specification: FLOAT .

    $default  reduce using rule 45 (type_specification)


state 7

   46 type_specification: DOUBLE .

    $default  reduce using rule 46 (type_specification)


state 8

   47 type_specification: SIGNED .

    $default  reduce using rule 47 (type_specification)


state 9

   48 type_specification: UNSIGNED .

    $default  reduce using rule 48 (type_specification)


state 10

   53 declarator: ID .

    $default  reduce using rule 53 (declarator)


state 11

   54 declarator: OB . declarator CB

    ID  shift, and go to state 10
    OB  shift, and go to state 11

    declarator  go to state 20


state 12

    0 $accept: document . $end

    $end  shift, and go to state 21


state 13

    2 document: translation_unit .
    4 translation_unit: translation_unit . external_declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    ID        shift, and go to state 10
    OB        shift, and go to state 11

    $default  reduce using rule 2 (document)

    external_declaration       go to state 22
    function_definition        go to state 15
    declaration                go to state 16
    declaration_specification  go to state 17
    type_specification         go to state 18
    declarator                 go to state 19


state 14

    3 translation_unit: external_declaration .

    $default  reduce using rule 3 (translation_unit)


state 15

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


state 16

    6 external_declaration: declaration .

    $default  reduce using rule 6 (external_declaration)


state 17

    7 function_definition: declaration_specification . declarator declaration_list compound_statement
    9                    | declaration_specification . declarator compound_statement
   11 declaration: declaration_specification . init_declarator_list LINE_END
   12            | declaration_specification . LINE_END

    ID        shift, and go to state 10
    LINE_END  shift, and go to state 23
    OB        shift, and go to state 11

    init_declarator_list  go to state 24
    init_declarator       go to state 25
    declarator            go to state 26


state 18

   38 declaration_specification: type_specification .
   39                          | type_specification . declaration_specification

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9

    $default  reduce using rule 38 (declaration_specification)

    declaration_specification  go to state 27
    type_specification         go to state 18


state 19

    8 function_definition: declarator . declaration_list compound_statement
   10                    | declarator . compound_statement
   55 declarator: declarator . OB parameter_list CB
   56           | declarator . OB CB

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    OB        shift, and go to state 28
    OB_CURLY  shift, and go to state 29

    declaration                go to state 30
    declaration_list           go to state 31
    compound_statement         go to state 32
    declaration_specification  go to state 33
    type_specification         go to state 18


state 20

   54 declarator: OB declarator . CB
   55           | declarator . OB parameter_list CB
   56           | declarator . OB CB

    OB  shift, and go to state 28
    CB  shift, and go to state 34


state 21

    0 $accept: document $end .

    $default  accept


state 22

    4 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 4 (translation_unit)


state 23

   12 declaration: declaration_specification LINE_END .

    $default  reduce using rule 12 (declaration)


state 24

   11 declaration: declaration_specification init_declarator_list . LINE_END
   50 init_declarator_list: init_declarator_list . COMMA init_declarator

    LINE_END  shift, and go to state 35
    COMMA     shift, and go to state 36


state 25

   49 init_declarator_list: init_declarator .

    $default  reduce using rule 49 (init_declarator_list)


state 26

    7 function_definition: declaration_specification declarator . declaration_list compound_statement
    9                    | declaration_specification declarator . compound_statement
   51 init_declarator: declarator .
   52                | declarator . ASSIGN_OP initializer
   55 declarator: declarator . OB parameter_list CB
   56           | declarator . OB CB

    VOID       shift, and go to state 1
    CHAR       shift, and go to state 2
    SHORT      shift, and go to state 3
    INT        shift, and go to state 4
    LONG       shift, and go to state 5
    FLOAT      shift, and go to state 6
    DOUBLE     shift, and go to state 7
    SIGNED     shift, and go to state 8
    UNSIGNED   shift, and go to state 9
    ASSIGN_OP  shift, and go to state 37
    OB         shift, and go to state 28
    OB_CURLY   shift, and go to state 29

    $default  reduce using rule 51 (init_declarator)

    declaration                go to state 30
    declaration_list           go to state 38
    compound_statement         go to state 39
    declaration_specification  go to state 33
    type_specification         go to state 18


state 27

   39 declaration_specification: type_specification declaration_specification .

    $default  reduce using rule 39 (declaration_specification)


state 28

   55 declarator: declarator OB . parameter_list CB
   56           | declarator OB . CB

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    CB        shift, and go to state 40

    declaration_specification  go to state 41
    type_specification         go to state 18
    parameter_list             go to state 42
    parameter_declaration      go to state 43


state 29

   15 compound_statement: OB_CURLY . declaration_list statement_list CB_CURLY
   16                   | OB_CURLY . statement_list CB_CURLY
   17                   | OB_CURLY . declaration_list CB_CURLY
   18                   | OB_CURLY . CB_CURLY

    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    SHORT               shift, and go to state 3
    INT                 shift, and go to state 4
    LONG                shift, and go to state 5
    FLOAT               shift, and go to state 6
    DOUBLE              shift, and go to state 7
    SIGNED              shift, and go to state 8
    UNSIGNED            shift, and go to state 9
    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    CB_CURLY            shift, and go to state 59
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    declaration                go to state 30
    declaration_list           go to state 66
    compound_statement         go to state 67
    statement_list             go to state 68
    statement                  go to state 69
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    declaration_specification  go to state 33
    type_specification         go to state 18
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 30

   13 declaration_list: declaration .

    $default  reduce using rule 13 (declaration_list)


state 31

    8 function_definition: declarator declaration_list . compound_statement
   14 declaration_list: declaration_list . declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    OB_CURLY  shift, and go to state 29

    declaration                go to state 94
    compound_statement         go to state 95
    declaration_specification  go to state 33
    type_specification         go to state 18


state 32

   10 function_definition: declarator compound_statement .

    $default  reduce using rule 10 (function_definition)


state 33

   11 declaration: declaration_specification . init_declarator_list LINE_END
   12            | declaration_specification . LINE_END

    ID        shift, and go to state 10
    LINE_END  shift, and go to state 23
    OB        shift, and go to state 11

    init_declarator_list  go to state 24
    init_declarator       go to state 25
    declarator            go to state 96


state 34

   54 declarator: OB declarator CB .

    $default  reduce using rule 54 (declarator)


state 35

   11 declaration: declaration_specification init_declarator_list LINE_END .

    $default  reduce using rule 11 (declaration)


state 36

   50 init_declarator_list: init_declarator_list COMMA . init_declarator

    ID  shift, and go to state 10
    OB  shift, and go to state 11

    init_declarator  go to state 97
    declarator       go to state 96


state 37

   52 init_declarator: declarator ASSIGN_OP . initializer

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 99

    initializer                go to state 100
    assignment_expression      go to state 101
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 38

    7 function_definition: declaration_specification declarator declaration_list . compound_statement
   14 declaration_list: declaration_list . declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    OB_CURLY  shift, and go to state 29

    declaration                go to state 94
    compound_statement         go to state 102
    declaration_specification  go to state 33
    type_specification         go to state 18


state 39

    9 function_definition: declaration_specification declarator compound_statement .

    $default  reduce using rule 9 (function_definition)


state 40

   56 declarator: declarator OB CB .

    $default  reduce using rule 56 (declarator)


state 41

   59 parameter_declaration: declaration_specification . declarator
   60                      | declaration_specification .

    ID  shift, and go to state 10
    OB  shift, and go to state 11

    $default  reduce using rule 60 (parameter_declaration)

    declarator  go to state 103


state 42

   55 declarator: declarator OB parameter_list . CB
   58 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 104
    CB     shift, and go to state 105


state 43

   57 parameter_list: parameter_declaration .

    $default  reduce using rule 57 (parameter_list)


state 44

   27 labeled_statement: ID . COLON statement
  127 primary_expression: ID .

    COLON  shift, and go to state 106

    $default  reduce using rule 127 (primary_expression)


state 45

  129 primary_expression: STRING .

    $default  reduce using rule 129 (primary_expression)


state 46

  133 const: CHAR_CONST .

    $default  reduce using rule 133 (const)


state 47

  134 const: INT_CONST .

    $default  reduce using rule 134 (const)


state 48

  135 const: FLOAT_CONST .

    $default  reduce using rule 135 (const)


state 49

   73 prefix_operator: UNARY_INCREMENT_OP .

    $default  reduce using rule 73 (prefix_operator)


state 50

   74 prefix_operator: UNARY_DECREMENT_OP .

    $default  reduce using rule 74 (prefix_operator)


state 51

  140 unary_operator: BITWISE_NOT_OP .

    $default  reduce using rule 140 (unary_operator)


state 52

  137 unary_operator: MUL_OP .

    $default  reduce using rule 137 (unary_operator)


state 53

  138 unary_operator: ADD_OP .

    $default  reduce using rule 138 (unary_operator)


state 54

  139 unary_operator: SUB_OP .

    $default  reduce using rule 139 (unary_operator)


state 55

  141 unary_operator: NOT_OP .

    $default  reduce using rule 141 (unary_operator)


state 56

  136 unary_operator: AND_OP .

    $default  reduce using rule 136 (unary_operator)


state 57

   29 expression_statement: LINE_END .

    $default  reduce using rule 29 (expression_statement)


state 58

  130 primary_expression: OB . expression CB

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 107
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 59

   18 compound_statement: OB_CURLY CB_CURLY .

    $default  reduce using rule 18 (compound_statement)


state 60

   35 jump_statement: BREAK . LINE_END

    LINE_END  shift, and go to state 108


state 61

   34 jump_statement: CONTINUE . LINE_END

    LINE_END  shift, and go to state 109


state 62

   32 iteration_statement: WHILE . OB expression CB statement

    OB  shift, and go to state 110


state 63

   36 jump_statement: RETURN . expression LINE_END
   37               | RETURN . LINE_END

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 111
    OB                  shift, and go to state 58

    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 112
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 64

   30 selection_statement: IF . OB expression CB statement
   31                    | IF . OB expression CB statement ELSE statement

    OB  shift, and go to state 113


state 65

   33 jump_statement: GOTO . ID LINE_END

    ID  shift, and go to state 114


state 66

   14 declaration_list: declaration_list . declaration
   15 compound_statement: OB_CURLY declaration_list . statement_list CB_CURLY
   17                   | OB_CURLY declaration_list . CB_CURLY

    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    SHORT               shift, and go to state 3
    INT                 shift, and go to state 4
    LONG                shift, and go to state 5
    FLOAT               shift, and go to state 6
    DOUBLE              shift, and go to state 7
    SIGNED              shift, and go to state 8
    UNSIGNED            shift, and go to state 9
    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    CB_CURLY            shift, and go to state 115
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    declaration                go to state 94
    compound_statement         go to state 67
    statement_list             go to state 116
    statement                  go to state 69
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    declaration_specification  go to state 33
    type_specification         go to state 18
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 67

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


state 68

   16 compound_statement: OB_CURLY statement_list . CB_CURLY
   20 statement_list: statement_list . statement

    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    CB_CURLY            shift, and go to state 117
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    compound_statement         go to state 67
    statement                  go to state 118
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 69

   19 statement_list: statement .

    $default  reduce using rule 19 (statement_list)


state 70

   21 statement: labeled_statement .

    $default  reduce using rule 21 (statement)


state 71

   22 statement: expression_statement .

    $default  reduce using rule 22 (statement)


state 72

   24 statement: selection_statement .

    $default  reduce using rule 24 (statement)


state 73

   25 statement: iteration_statement .

    $default  reduce using rule 25 (statement)


state 74

   26 statement: jump_statement .

    $default  reduce using rule 26 (statement)


state 75

  119 expression: assignment_expression .

    $default  reduce using rule 119 (expression)


state 76

   66 assignment_expression: conditional_expression .

    $default  reduce using rule 66 (assignment_expression)


state 77

   67 assignment_expression: unary_expression . assignment_operator assignment_expression
  114 multiplicative_expression: unary_expression .

    ASSIGN_OP              shift, and go to state 119
    ASSIGN_MUL_OP          shift, and go to state 120
    ASSIGN_DIV_OP          shift, and go to state 121
    ASSIGN_MOD_OP          shift, and go to state 122
    ASSIGN_ADD_OP          shift, and go to state 123
    ASSIGN_SUB_OP          shift, and go to state 124
    ASSIGN_SHIFT_LEFT_OP   shift, and go to state 125
    ASSIGN_SHIFT_RIGHT_OP  shift, and go to state 126
    ASSIGN_BITWISE_AND_OP  shift, and go to state 127
    ASSIGN_BITWISE_XOR_OP  shift, and go to state 128
    ASSIGN_BITWISE_OR_OP   shift, and go to state 129

    $default  reduce using rule 114 (multiplicative_expression)

    assignment_operator  go to state 130


state 78

   71 unary_expression: prefix_operator . unary_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression    go to state 131
    prefix_operator     go to state 78
    postfix_expression  go to state 90
    primary_expression  go to state 91
    const               go to state 92
    unary_operator      go to state 93


state 79

   68 conditional_expression: logical_or_expression .
   69                       | logical_or_expression . QUESTION_MARK expression COLON conditional_expression
   87 logical_or_expression: logical_or_expression . LOGICAL_OR_OP logical_and_expression

    LOGICAL_OR_OP  shift, and go to state 132
    QUESTION_MARK  shift, and go to state 133

    $default  reduce using rule 68 (conditional_expression)


state 80

   86 logical_or_expression: logical_and_expression .
   89 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 134

    $default  reduce using rule 86 (logical_or_expression)


state 81

   88 logical_and_expression: inclusive_or_expression .
   91 inclusive_or_expression: inclusive_or_expression . OR_OP exclusive_or_expression

    OR_OP  shift, and go to state 135

    $default  reduce using rule 88 (logical_and_expression)


state 82

   90 inclusive_or_expression: exclusive_or_expression .
   93 exclusive_or_expression: exclusive_or_expression . EXCLUSIVE_OR_OP and_expression

    EXCLUSIVE_OR_OP  shift, and go to state 136

    $default  reduce using rule 90 (inclusive_or_expression)


state 83

   92 exclusive_or_expression: and_expression .
   95 and_expression: and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 137

    $default  reduce using rule 92 (exclusive_or_expression)


state 84

   94 and_expression: equality_expression .
   97 equality_expression: equality_expression . equality_operator relational_expression

    EQUAL_OP      shift, and go to state 138
    NOT_EQUAL_OP  shift, and go to state 139

    $default  reduce using rule 94 (and_expression)

    equality_operator  go to state 140


state 85

   96 equality_expression: relational_expression .
  101 relational_expression: relational_expression . compare_operator shift_expression

    LT_OP  shift, and go to state 141
    GT_OP  shift, and go to state 142
    LE_OP  shift, and go to state 143
    GE_OP  shift, and go to state 144

    $default  reduce using rule 96 (equality_expression)

    compare_operator  go to state 145


state 86

  100 relational_expression: shift_expression .
  107 shift_expression: shift_expression . shift_operator additive_expression

    SHIFT_LEFT_OP   shift, and go to state 146
    SHIFT_RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 100 (relational_expression)

    shift_operator  go to state 148


state 87

  106 shift_expression: additive_expression .
  111 additive_expression: additive_expression . additive_operator multiplicative_expression

    ADD_OP  shift, and go to state 149
    SUB_OP  shift, and go to state 150

    $default  reduce using rule 106 (shift_expression)

    additive_operator  go to state 151


state 88

  110 additive_expression: multiplicative_expression .
  115 multiplicative_expression: multiplicative_expression . multiplicative_operator unary_expression

    MUL_OP  shift, and go to state 152
    DIV_OP  shift, and go to state 153
    MOD_OP  shift, and go to state 154

    $default  reduce using rule 110 (additive_expression)

    multiplicative_operator  go to state 155


state 89

   28 expression_statement: expression . LINE_END
  120 expression: expression . COMMA assignment_expression

    LINE_END  shift, and go to state 156
    COMMA     shift, and go to state 157


state 90

   70 unary_expression: postfix_expression .
  122 postfix_expression: postfix_expression . OB argument_expression_list CB
  123                   | postfix_expression . OB CB
  124                   | postfix_expression . postfix_operator

    UNARY_INCREMENT_OP  shift, and go to state 158
    UNARY_DECREMENT_OP  shift, and go to state 159
    OB                  shift, and go to state 160

    $default  reduce using rule 70 (unary_expression)

    postfix_operator  go to state 161


state 91

  121 postfix_expression: primary_expression .

    $default  reduce using rule 121 (postfix_expression)


state 92

  128 primary_expression: const .

    $default  reduce using rule 128 (primary_expression)


state 93

   72 unary_expression: unary_operator .

    $default  reduce using rule 72 (unary_expression)


state 94

   14 declaration_list: declaration_list declaration .

    $default  reduce using rule 14 (declaration_list)


state 95

    8 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 8 (function_definition)


state 96

   51 init_declarator: declarator .
   52                | declarator . ASSIGN_OP initializer
   55 declarator: declarator . OB parameter_list CB
   56           | declarator . OB CB

    ASSIGN_OP  shift, and go to state 37
    OB         shift, and go to state 28

    $default  reduce using rule 51 (init_declarator)


state 97

   50 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 50 (init_declarator_list)


state 98

  127 primary_expression: ID .

    $default  reduce using rule 127 (primary_expression)


state 99

   62 initializer: OB_CURLY . initializer_list CB_CURLY
   63            | OB_CURLY . initializer_list COMMA CB_CURLY

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 99

    initializer                go to state 162
    initializer_list           go to state 163
    assignment_expression      go to state 101
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 100

   52 init_declarator: declarator ASSIGN_OP initializer .

    $default  reduce using rule 52 (init_declarator)


state 101

   61 initializer: assignment_expression .

    $default  reduce using rule 61 (initializer)


state 102

    7 function_definition: declaration_specification declarator declaration_list compound_statement .

    $default  reduce using rule 7 (function_definition)


state 103

   55 declarator: declarator . OB parameter_list CB
   56           | declarator . OB CB
   59 parameter_declaration: declaration_specification declarator .

    OB  shift, and go to state 28

    $default  reduce using rule 59 (parameter_declaration)


state 104

   58 parameter_list: parameter_list COMMA . parameter_declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9

    declaration_specification  go to state 41
    type_specification         go to state 18
    parameter_declaration      go to state 164


state 105

   55 declarator: declarator OB parameter_list CB .

    $default  reduce using rule 55 (declarator)


state 106

   27 labeled_statement: ID COLON . statement

    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    compound_statement         go to state 67
    statement                  go to state 165
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 107

  120 expression: expression . COMMA assignment_expression
  130 primary_expression: OB expression . CB

    COMMA  shift, and go to state 157
    CB     shift, and go to state 166


state 108

   35 jump_statement: BREAK LINE_END .

    $default  reduce using rule 35 (jump_statement)


state 109

   34 jump_statement: CONTINUE LINE_END .

    $default  reduce using rule 34 (jump_statement)


state 110

   32 iteration_statement: WHILE OB . expression CB statement

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 167
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 111

   37 jump_statement: RETURN LINE_END .

    $default  reduce using rule 37 (jump_statement)


state 112

   36 jump_statement: RETURN expression . LINE_END
  120 expression: expression . COMMA assignment_expression

    LINE_END  shift, and go to state 168
    COMMA     shift, and go to state 157


state 113

   30 selection_statement: IF OB . expression CB statement
   31                    | IF OB . expression CB statement ELSE statement

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 169
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 114

   33 jump_statement: GOTO ID . LINE_END

    LINE_END  shift, and go to state 170


state 115

   17 compound_statement: OB_CURLY declaration_list CB_CURLY .

    $default  reduce using rule 17 (compound_statement)


state 116

   15 compound_statement: OB_CURLY declaration_list statement_list . CB_CURLY
   20 statement_list: statement_list . statement

    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    CB_CURLY            shift, and go to state 171
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    compound_statement         go to state 67
    statement                  go to state 118
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 117

   16 compound_statement: OB_CURLY statement_list CB_CURLY .

    $default  reduce using rule 16 (compound_statement)


state 118

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


state 119

   75 assignment_operator: ASSIGN_OP .

    $default  reduce using rule 75 (assignment_operator)


state 120

   76 assignment_operator: ASSIGN_MUL_OP .

    $default  reduce using rule 76 (assignment_operator)


state 121

   77 assignment_operator: ASSIGN_DIV_OP .

    $default  reduce using rule 77 (assignment_operator)


state 122

   78 assignment_operator: ASSIGN_MOD_OP .

    $default  reduce using rule 78 (assignment_operator)


state 123

   79 assignment_operator: ASSIGN_ADD_OP .

    $default  reduce using rule 79 (assignment_operator)


state 124

   80 assignment_operator: ASSIGN_SUB_OP .

    $default  reduce using rule 80 (assignment_operator)


state 125

   81 assignment_operator: ASSIGN_SHIFT_LEFT_OP .

    $default  reduce using rule 81 (assignment_operator)


state 126

   82 assignment_operator: ASSIGN_SHIFT_RIGHT_OP .

    $default  reduce using rule 82 (assignment_operator)


state 127

   83 assignment_operator: ASSIGN_BITWISE_AND_OP .

    $default  reduce using rule 83 (assignment_operator)


state 128

   84 assignment_operator: ASSIGN_BITWISE_XOR_OP .

    $default  reduce using rule 84 (assignment_operator)


state 129

   85 assignment_operator: ASSIGN_BITWISE_OR_OP .

    $default  reduce using rule 85 (assignment_operator)


state 130

   67 assignment_expression: unary_expression assignment_operator . assignment_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 172
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 131

   71 unary_expression: prefix_operator unary_expression .

    $default  reduce using rule 71 (unary_expression)


state 132

   87 logical_or_expression: logical_or_expression LOGICAL_OR_OP . logical_and_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    logical_and_expression     go to state 174
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 133

   69 conditional_expression: logical_or_expression QUESTION_MARK . expression COLON conditional_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 175
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 134

   89 logical_and_expression: logical_and_expression LOGICAL_AND_OP . inclusive_or_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    inclusive_or_expression    go to state 176
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 135

   91 inclusive_or_expression: inclusive_or_expression OR_OP . exclusive_or_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    exclusive_or_expression    go to state 177
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 136

   93 exclusive_or_expression: exclusive_or_expression EXCLUSIVE_OR_OP . and_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    and_expression             go to state 178
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 137

   95 and_expression: and_expression AND_OP . equality_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    equality_expression        go to state 179
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 138

   98 equality_operator: EQUAL_OP .

    $default  reduce using rule 98 (equality_operator)


state 139

   99 equality_operator: NOT_EQUAL_OP .

    $default  reduce using rule 99 (equality_operator)


state 140

   97 equality_expression: equality_expression equality_operator . relational_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    relational_expression      go to state 180
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 141

  102 compare_operator: LT_OP .

    $default  reduce using rule 102 (compare_operator)


state 142

  103 compare_operator: GT_OP .

    $default  reduce using rule 103 (compare_operator)


state 143

  104 compare_operator: LE_OP .

    $default  reduce using rule 104 (compare_operator)


state 144

  105 compare_operator: GE_OP .

    $default  reduce using rule 105 (compare_operator)


state 145

  101 relational_expression: relational_expression compare_operator . shift_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    shift_expression           go to state 181
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 146

  108 shift_operator: SHIFT_LEFT_OP .

    $default  reduce using rule 108 (shift_operator)


state 147

  109 shift_operator: SHIFT_RIGHT_OP .

    $default  reduce using rule 109 (shift_operator)


state 148

  107 shift_expression: shift_expression shift_operator . additive_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    additive_expression        go to state 182
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 149

  112 additive_operator: ADD_OP .

    $default  reduce using rule 112 (additive_operator)


state 150

  113 additive_operator: SUB_OP .

    $default  reduce using rule 113 (additive_operator)


state 151

  111 additive_expression: additive_expression additive_operator . multiplicative_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression           go to state 173
    prefix_operator            go to state 78
    multiplicative_expression  go to state 183
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 152

  116 multiplicative_operator: MUL_OP .

    $default  reduce using rule 116 (multiplicative_operator)


state 153

  117 multiplicative_operator: DIV_OP .

    $default  reduce using rule 117 (multiplicative_operator)


state 154

  118 multiplicative_operator: MOD_OP .

    $default  reduce using rule 118 (multiplicative_operator)


state 155

  115 multiplicative_expression: multiplicative_expression multiplicative_operator . unary_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    unary_expression    go to state 184
    prefix_operator     go to state 78
    postfix_expression  go to state 90
    primary_expression  go to state 91
    const               go to state 92
    unary_operator      go to state 93


state 156

   28 expression_statement: expression LINE_END .

    $default  reduce using rule 28 (expression_statement)


state 157

  120 expression: expression COMMA . assignment_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 185
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 158

  125 postfix_operator: UNARY_INCREMENT_OP .

    $default  reduce using rule 125 (postfix_operator)


state 159

  126 postfix_operator: UNARY_DECREMENT_OP .

    $default  reduce using rule 126 (postfix_operator)


state 160

  122 postfix_expression: postfix_expression OB . argument_expression_list CB
  123                   | postfix_expression OB . CB

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58
    CB                  shift, and go to state 186

    assignment_expression      go to state 187
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    argument_expression_list   go to state 188
    const                      go to state 92
    unary_operator             go to state 93


state 161

  124 postfix_expression: postfix_expression postfix_operator .

    $default  reduce using rule 124 (postfix_expression)


state 162

   64 initializer_list: initializer .

    $default  reduce using rule 64 (initializer_list)


state 163

   62 initializer: OB_CURLY initializer_list . CB_CURLY
   63            | OB_CURLY initializer_list . COMMA CB_CURLY
   65 initializer_list: initializer_list . COMMA initializer

    COMMA     shift, and go to state 189
    CB_CURLY  shift, and go to state 190


state 164

   58 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 58 (parameter_list)


state 165

   27 labeled_statement: ID COLON statement .

    $default  reduce using rule 27 (labeled_statement)


state 166

  130 primary_expression: OB expression CB .

    $default  reduce using rule 130 (primary_expression)


state 167

   32 iteration_statement: WHILE OB expression . CB statement
  120 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 157
    CB     shift, and go to state 191


state 168

   36 jump_statement: RETURN expression LINE_END .

    $default  reduce using rule 36 (jump_statement)


state 169

   30 selection_statement: IF OB expression . CB statement
   31                    | IF OB expression . CB statement ELSE statement
  120 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 157
    CB     shift, and go to state 192


state 170

   33 jump_statement: GOTO ID LINE_END .

    $default  reduce using rule 33 (jump_statement)


state 171

   15 compound_statement: OB_CURLY declaration_list statement_list CB_CURLY .

    $default  reduce using rule 15 (compound_statement)


state 172

   67 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


state 173

  114 multiplicative_expression: unary_expression .

    $default  reduce using rule 114 (multiplicative_expression)


state 174

   87 logical_or_expression: logical_or_expression LOGICAL_OR_OP logical_and_expression .
   89 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 134

    $default  reduce using rule 87 (logical_or_expression)


state 175

   69 conditional_expression: logical_or_expression QUESTION_MARK expression . COLON conditional_expression
  120 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 193
    COMMA  shift, and go to state 157


state 176

   89 logical_and_expression: logical_and_expression LOGICAL_AND_OP inclusive_or_expression .
   91 inclusive_or_expression: inclusive_or_expression . OR_OP exclusive_or_expression

    OR_OP  shift, and go to state 135

    $default  reduce using rule 89 (logical_and_expression)


state 177

   91 inclusive_or_expression: inclusive_or_expression OR_OP exclusive_or_expression .
   93 exclusive_or_expression: exclusive_or_expression . EXCLUSIVE_OR_OP and_expression

    EXCLUSIVE_OR_OP  shift, and go to state 136

    $default  reduce using rule 91 (inclusive_or_expression)


state 178

   93 exclusive_or_expression: exclusive_or_expression EXCLUSIVE_OR_OP and_expression .
   95 and_expression: and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 137

    $default  reduce using rule 93 (exclusive_or_expression)


state 179

   95 and_expression: and_expression AND_OP equality_expression .
   97 equality_expression: equality_expression . equality_operator relational_expression

    EQUAL_OP      shift, and go to state 138
    NOT_EQUAL_OP  shift, and go to state 139

    $default  reduce using rule 95 (and_expression)

    equality_operator  go to state 140


state 180

   97 equality_expression: equality_expression equality_operator relational_expression .
  101 relational_expression: relational_expression . compare_operator shift_expression

    LT_OP  shift, and go to state 141
    GT_OP  shift, and go to state 142
    LE_OP  shift, and go to state 143
    GE_OP  shift, and go to state 144

    $default  reduce using rule 97 (equality_expression)

    compare_operator  go to state 145


state 181

  101 relational_expression: relational_expression compare_operator shift_expression .
  107 shift_expression: shift_expression . shift_operator additive_expression

    SHIFT_LEFT_OP   shift, and go to state 146
    SHIFT_RIGHT_OP  shift, and go to state 147

    $default  reduce using rule 101 (relational_expression)

    shift_operator  go to state 148


state 182

  107 shift_expression: shift_expression shift_operator additive_expression .
  111 additive_expression: additive_expression . additive_operator multiplicative_expression

    ADD_OP  shift, and go to state 149
    SUB_OP  shift, and go to state 150

    $default  reduce using rule 107 (shift_expression)

    additive_operator  go to state 151


state 183

  111 additive_expression: additive_expression additive_operator multiplicative_expression .
  115 multiplicative_expression: multiplicative_expression . multiplicative_operator unary_expression

    MUL_OP  shift, and go to state 152
    DIV_OP  shift, and go to state 153
    MOD_OP  shift, and go to state 154

    $default  reduce using rule 111 (additive_expression)

    multiplicative_operator  go to state 155


state 184

  115 multiplicative_expression: multiplicative_expression multiplicative_operator unary_expression .

    $default  reduce using rule 115 (multiplicative_expression)


state 185

  120 expression: expression COMMA assignment_expression .

    $default  reduce using rule 120 (expression)


state 186

  123 postfix_expression: postfix_expression OB CB .

    $default  reduce using rule 123 (postfix_expression)


state 187

  131 argument_expression_list: assignment_expression .

    $default  reduce using rule 131 (argument_expression_list)


state 188

  122 postfix_expression: postfix_expression OB argument_expression_list . CB
  132 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 194
    CB     shift, and go to state 195


state 189

   63 initializer: OB_CURLY initializer_list COMMA . CB_CURLY
   65 initializer_list: initializer_list COMMA . initializer

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 99
    CB_CURLY            shift, and go to state 196

    initializer                go to state 197
    assignment_expression      go to state 101
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 190

   62 initializer: OB_CURLY initializer_list CB_CURLY .

    $default  reduce using rule 62 (initializer)


state 191

   32 iteration_statement: WHILE OB expression CB . statement

    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    compound_statement         go to state 67
    statement                  go to state 198
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 192

   30 selection_statement: IF OB expression CB . statement
   31                    | IF OB expression CB . statement ELSE statement

    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    compound_statement         go to state 67
    statement                  go to state 199
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 193

   69 conditional_expression: logical_or_expression QUESTION_MARK expression COLON . conditional_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    conditional_expression     go to state 200
    unary_expression           go to state 173
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 194

  132 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ID                  shift, and go to state 98
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    OB                  shift, and go to state 58

    assignment_expression      go to state 201
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 195

  122 postfix_expression: postfix_expression OB argument_expression_list CB .

    $default  reduce using rule 122 (postfix_expression)


state 196

   63 initializer: OB_CURLY initializer_list COMMA CB_CURLY .

    $default  reduce using rule 63 (initializer)


state 197

   65 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 65 (initializer_list)


state 198

   32 iteration_statement: WHILE OB expression CB statement .

    $default  reduce using rule 32 (iteration_statement)


state 199

   30 selection_statement: IF OB expression CB statement .
   31                    | IF OB expression CB statement . ELSE statement

    ELSE  shift, and go to state 202

    $default  reduce using rule 30 (selection_statement)


state 200

   69 conditional_expression: logical_or_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 69 (conditional_expression)


state 201

  132 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 132 (argument_expression_list)


state 202

   31 selection_statement: IF OB expression CB statement ELSE . statement

    ID                  shift, and go to state 44
    STRING              shift, and go to state 45
    CHAR_CONST          shift, and go to state 46
    INT_CONST           shift, and go to state 47
    FLOAT_CONST         shift, and go to state 48
    UNARY_INCREMENT_OP  shift, and go to state 49
    UNARY_DECREMENT_OP  shift, and go to state 50
    BITWISE_NOT_OP      shift, and go to state 51
    MUL_OP              shift, and go to state 52
    ADD_OP              shift, and go to state 53
    SUB_OP              shift, and go to state 54
    NOT_OP              shift, and go to state 55
    AND_OP              shift, and go to state 56
    LINE_END            shift, and go to state 57
    OB                  shift, and go to state 58
    OB_CURLY            shift, and go to state 29
    BREAK               shift, and go to state 60
    CONTINUE            shift, and go to state 61
    WHILE               shift, and go to state 62
    RETURN              shift, and go to state 63
    IF                  shift, and go to state 64
    GOTO                shift, and go to state 65

    compound_statement         go to state 67
    statement                  go to state 203
    labeled_statement          go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    assignment_expression      go to state 75
    conditional_expression     go to state 76
    unary_expression           go to state 77
    prefix_operator            go to state 78
    logical_or_expression      go to state 79
    logical_and_expression     go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    expression                 go to state 89
    postfix_expression         go to state 90
    primary_expression         go to state 91
    const                      go to state 92
    unary_operator             go to state 93


state 203

   31 selection_statement: IF OB expression CB statement ELSE statement .

    $default  reduce using rule 31 (selection_statement)
