Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specification declarator declaration_list compound_statement
    6                    | declarator declaration_list compound_statement
    7                    | declaration_specification declarator compound_statement
    8                    | declarator compound_statement

    9 declaration: declaration_specification init_declarator_list LINE_END
   10            | declaration_specification LINE_END

   11 declaration_list: declaration
   12                 | declaration_list declaration

   13 compound_statement: OB_CURLY declaration_list statement_list CB_CURLY
   14                   | OB_CURLY statement_list CB_CURLY
   15                   | OB_CURLY declaration_list CB_CURLY
   16                   | OB_CURLY CB_CURLY

   17 statement_list: statement
   18               | statement_list statement

   19 statement: labeled_statement
   20          | expression_statement
   21          | compound_statement
   22          | selection_statement
   23          | iteration_statement
   24          | jump_statement

   25 labeled_statement: ID COLON statement

   26 expression_statement: expression LINE_END
   27                     | LINE_END

   28 selection_statement: IF OB expression CB statement
   29                    | IF OB expression CB statement ELSE statement

   30 iteration_statement: WHILE OB expression CB statement

   31 jump_statement: GOTO ID LINE_END
   32               | CONTINUE LINE_END
   33               | BREAK LINE_END
   34               | RETURN expression LINE_END
   35               | RETURN LINE_END

   36 declaration_specification: type_specification
   37                          | type_specification declaration_specification

   38 type_specification: VOID
   39                   | CHAR
   40                   | SHORT
   41                   | INT
   42                   | LONG
   43                   | FLOAT
   44                   | DOUBLE
   45                   | SIGNED
   46                   | UNSIGNED

   47 init_declarator_list: init_declarator
   48                     | init_declarator_list COMMA init_declarator

   49 init_declarator: declarator
   50                | declarator ASSIGN_OP initializer

   51 declarator: ID
   52           | OB declarator CB
   53           | declarator OB parameter_list CB
   54           | declarator OB CB

   55 parameter_list: parameter_declaration
   56               | parameter_list COMMA parameter_declaration

   57 parameter_declaration: declaration_specification declarator
   58                      | declaration_specification

   59 initializer: assignment_expression
   60            | OB_CURLY initializer_list CB_CURLY
   61            | OB_CURLY initializer_list COMMA CB_CURLY

   62 initializer_list: initializer
   63                 | initializer_list COMMA initializer

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 conditional_expression: logical_or_expression
   67                       | logical_or_expression QUESTION_MARK expression COLON conditional_expression

   68 unary_expression: postfix_expression
   69                 | prefix_operator unary_expression
   70                 | unary_operator

   71 prefix_operator: UNARY_INCREMENT_OP
   72                | UNARY_DECREMENT_OP

   73 assignment_operator: ASSIGN_OP
   74                    | ASSIGN_MUL_OP
   75                    | ASSIGN_DIV_OP
   76                    | ASSIGN_MOD_OP
   77                    | ASSIGN_ADD_OP
   78                    | ASSIGN_SUB_OP
   79                    | ASSIGN_SHIFT_LEFT_OP
   80                    | ASSIGN_SHIFT_RIGHT_OP
   81                    | ASSIGN_BITWISE_AND_OP
   82                    | ASSIGN_BITWISE_XOR_OP
   83                    | ASSIGN_BITWISE_OR_OP

   84 logical_or_expression: logical_and_expression
   85                      | logical_or_expression LOGICAL_OR_OP logical_and_expression

   86 logical_and_expression: inclusive_or_expression
   87                       | logical_and_expression LOGICAL_AND_OP inclusive_or_expression

   88 inclusive_or_expression: exclusive_or_expression
   89                        | inclusive_or_expression OR_OP exclusive_or_expression

   90 exclusive_or_expression: and_expression
   91                        | exclusive_or_expression EXCLUSIVE_OR_OP and_expression

   92 and_expression: equality_expression
   93               | and_expression AND_OP equality_expression

   94 equality_expression: relational_expression
   95                    | equality_expression equality_operator relational_expression

   96 equality_operator: EQUAL_OP
   97                  | NOT_EQUAL_OP

   98 relational_expression: shift_expression
   99                      | relational_expression compare_operator shift_expression

  100 compare_operator: LT_OP
  101                 | GT_OP
  102                 | LE_OP
  103                 | GE_OP

  104 shift_expression: additive_expression
  105                 | shift_expression shift_operator additive_expression

  106 shift_operator: SHIFT_LEFT_OP
  107               | SHIFT_RIGHT_OP

  108 additive_expression: multiplicative_expression
  109                    | additive_expression additive_operator multiplicative_expression

  110 additive_operator: ADD_OP
  111                  | SUB_OP

  112 multiplicative_expression: unary_expression
  113                          | multiplicative_expression multiplicative_operator unary_expression

  114 multiplicative_operator: MUL_OP
  115                        | DIV_OP
  116                        | MOD_OP

  117 expression: assignment_expression
  118           | expression COMMA assignment_expression

  119 postfix_expression: primary_expression
  120                   | postfix_expression OB argument_expression_list CB
  121                   | postfix_expression OB CB
  122                   | postfix_expression postfix_operator

  123 postfix_operator: UNARY_INCREMENT_OP
  124                 | UNARY_DECREMENT_OP

  125 primary_expression: ID
  126                   | const
  127                   | STRING
  128                   | OB expression CB

  129 argument_expression_list: assignment_expression
  130                         | argument_expression_list COMMA assignment_expression

  131 const: CHAR_CONST
  132      | INT_CONST
  133      | FLOAT_CONST

  134 unary_operator: AND_OP
  135               | MUL_OP
  136               | ADD_OP
  137               | SUB_OP
  138               | BITWISE_NOT_OP
  139               | NOT_OP


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 38
CHAR (259) 39
SHORT (260) 40
INT (261) 41
LONG (262) 42
FLOAT (263) 43
DOUBLE (264) 44
SIGNED (265) 45
UNSIGNED (266) 46
ID (267) 25 31 51 125
STRING (268) 127
CHAR_CONST (269) 131
INT_CONST (270) 132
FLOAT_CONST (271) 133
ASSIGN_OP (272) 50 73
ASSIGN_MUL_OP (273) 74
ASSIGN_DIV_OP (274) 75
ASSIGN_MOD_OP (275) 76
ASSIGN_ADD_OP (276) 77
ASSIGN_SUB_OP (277) 78
ASSIGN_SHIFT_LEFT_OP (278) 79
ASSIGN_SHIFT_RIGHT_OP (279) 80
ASSIGN_BITWISE_AND_OP (280) 81
ASSIGN_BITWISE_XOR_OP (281) 82
ASSIGN_BITWISE_OR_OP (282) 83
UNARY_INCREMENT_OP (283) 71 123
UNARY_DECREMENT_OP (284) 72 124
BITWISE_NOT_OP (285) 138
MUL_OP (286) 114 135
DIV_OP (287) 115
ADD_OP (288) 110 136
SUB_OP (289) 111 137
NOT_OP (290) 139
MOD_OP (291) 116
AND_OP (292) 93 134
OR_OP (293) 89
LOGICAL_OR_OP (294) 85
LOGICAL_AND_OP (295) 87
EXCLUSIVE_OR_OP (296) 91
EQUAL_OP (297) 96
NOT_EQUAL_OP (298) 97
LT_OP (299) 100
GT_OP (300) 101
LE_OP (301) 102
GE_OP (302) 103
SHIFT_LEFT_OP (303) 106
SHIFT_RIGHT_OP (304) 107
LINE_END (305) 9 10 26 27 31 32 33 34 35
COLON (306) 25 67
COMMA (307) 48 56 61 63 118 130
QUESTION_MARK (308) 67
OB (309) 28 29 30 52 53 54 120 121 128
CB (310) 28 29 30 52 53 54 120 121 128
OB_CURLY (311) 13 14 15 16 60 61
CB_CURLY (312) 13 14 15 16 60 61
BREAK (313) 33
CONTINUE (314) 32
WHILE (315) 30
RETURN (316) 34 35
IF (317) 28 29
ELSE (318) 29
GOTO (319) 31


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
translation_unit (66)
    on left: 1 2, on right: 0 2
external_declaration (67)
    on left: 3 4, on right: 1 2
function_definition (68)
    on left: 5 6 7 8, on right: 3
declaration (69)
    on left: 9 10, on right: 4 11 12
declaration_list (70)
    on left: 11 12, on right: 5 6 12 13 15
compound_statement (71)
    on left: 13 14 15 16, on right: 5 6 7 8 21
statement_list (72)
    on left: 17 18, on right: 13 14 18
statement (73)
    on left: 19 20 21 22 23 24, on right: 17 18 25 28 29 30
labeled_statement (74)
    on left: 25, on right: 19
expression_statement (75)
    on left: 26 27, on right: 20
selection_statement (76)
    on left: 28 29, on right: 22
iteration_statement (77)
    on left: 30, on right: 23
jump_statement (78)
    on left: 31 32 33 34 35, on right: 24
declaration_specification (79)
    on left: 36 37, on right: 5 7 9 10 37 57 58
type_specification (80)
    on left: 38 39 40 41 42 43 44 45 46, on right: 36 37
init_declarator_list (81)
    on left: 47 48, on right: 9 48
init_declarator (82)
    on left: 49 50, on right: 47 48
declarator (83)
    on left: 51 52 53 54, on right: 5 6 7 8 49 50 52 53 54 57
parameter_list (84)
    on left: 55 56, on right: 53 56
parameter_declaration (85)
    on left: 57 58, on right: 55 56
initializer (86)
    on left: 59 60 61, on right: 50 62 63
initializer_list (87)
    on left: 62 63, on right: 60 61 63
assignment_expression (88)
    on left: 64 65, on right: 59 65 117 118 129 130
conditional_expression (89)
    on left: 66 67, on right: 64 67
unary_expression (90)
    on left: 68 69 70, on right: 65 69 112 113
prefix_operator (91)
    on left: 71 72, on right: 69
assignment_operator (92)
    on left: 73 74 75 76 77 78 79 80 81 82 83, on right: 65
logical_or_expression (93)
    on left: 84 85, on right: 66 67 85
logical_and_expression (94)
    on left: 86 87, on right: 84 85 87
inclusive_or_expression (95)
    on left: 88 89, on right: 86 87 89
exclusive_or_expression (96)
    on left: 90 91, on right: 88 89 91
and_expression (97)
    on left: 92 93, on right: 90 91 93
equality_expression (98)
    on left: 94 95, on right: 92 93 95
equality_operator (99)
    on left: 96 97, on right: 95
relational_expression (100)
    on left: 98 99, on right: 94 95 99
compare_operator (101)
    on left: 100 101 102 103, on right: 99
shift_expression (102)
    on left: 104 105, on right: 98 99 105
shift_operator (103)
    on left: 106 107, on right: 105
additive_expression (104)
    on left: 108 109, on right: 104 105 109
additive_operator (105)
    on left: 110 111, on right: 109
multiplicative_expression (106)
    on left: 112 113, on right: 108 109 113
multiplicative_operator (107)
    on left: 114 115 116, on right: 113
expression (108)
    on left: 117 118, on right: 26 28 29 30 34 67 118 128
postfix_expression (109)
    on left: 119 120 121 122, on right: 68 120 121 122
postfix_operator (110)
    on left: 123 124, on right: 122
primary_expression (111)
    on left: 125 126 127 128, on right: 119
argument_expression_list (112)
    on left: 129 130, on right: 120 130
const (113)
    on left: 131 132 133, on right: 126
unary_operator (114)
    on left: 134 135 136 137 138 139, on right: 70


state 0

    0 $accept: . translation_unit $end

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    ID        shift, and go to state 10
    OB        shift, and go to state 11

    translation_unit           go to state 12
    external_declaration       go to state 13
    function_definition        go to state 14
    declaration                go to state 15
    declaration_specification  go to state 16
    type_specification         go to state 17
    declarator                 go to state 18


state 1

   38 type_specification: VOID .

    $default  reduce using rule 38 (type_specification)


state 2

   39 type_specification: CHAR .

    $default  reduce using rule 39 (type_specification)


state 3

   40 type_specification: SHORT .

    $default  reduce using rule 40 (type_specification)


state 4

   41 type_specification: INT .

    $default  reduce using rule 41 (type_specification)


state 5

   42 type_specification: LONG .

    $default  reduce using rule 42 (type_specification)


state 6

   43 type_specification: FLOAT .

    $default  reduce using rule 43 (type_specification)


state 7

   44 type_specification: DOUBLE .

    $default  reduce using rule 44 (type_specification)


state 8

   45 type_specification: SIGNED .

    $default  reduce using rule 45 (type_specification)


state 9

   46 type_specification: UNSIGNED .

    $default  reduce using rule 46 (type_specification)


state 10

   51 declarator: ID .

    $default  reduce using rule 51 (declarator)


state 11

   52 declarator: OB . declarator CB

    ID  shift, and go to state 10
    OB  shift, and go to state 11

    declarator  go to state 19


state 12

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end      shift, and go to state 20
    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    ID        shift, and go to state 10
    OB        shift, and go to state 11

    external_declaration       go to state 21
    function_definition        go to state 14
    declaration                go to state 15
    declaration_specification  go to state 16
    type_specification         go to state 17
    declarator                 go to state 18


state 13

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


state 14

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 15

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


state 16

    5 function_definition: declaration_specification . declarator declaration_list compound_statement
    7                    | declaration_specification . declarator compound_statement
    9 declaration: declaration_specification . init_declarator_list LINE_END
   10            | declaration_specification . LINE_END

    ID        shift, and go to state 10
    LINE_END  shift, and go to state 22
    OB        shift, and go to state 11

    init_declarator_list  go to state 23
    init_declarator       go to state 24
    declarator            go to state 25


state 17

   36 declaration_specification: type_specification .
   37                          | type_specification . declaration_specification

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9

    $default  reduce using rule 36 (declaration_specification)

    declaration_specification  go to state 26
    type_specification         go to state 17


state 18

    6 function_definition: declarator . declaration_list compound_statement
    8                    | declarator . compound_statement
   53 declarator: declarator . OB parameter_list CB
   54           | declarator . OB CB

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    OB        shift, and go to state 27
    OB_CURLY  shift, and go to state 28

    declaration                go to state 29
    declaration_list           go to state 30
    compound_statement         go to state 31
    declaration_specification  go to state 32
    type_specification         go to state 17


state 19

   52 declarator: OB declarator . CB
   53           | declarator . OB parameter_list CB
   54           | declarator . OB CB

    OB  shift, and go to state 27
    CB  shift, and go to state 33


state 20

    0 $accept: translation_unit $end .

    $default  accept


state 21

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 22

   10 declaration: declaration_specification LINE_END .

    $default  reduce using rule 10 (declaration)


state 23

    9 declaration: declaration_specification init_declarator_list . LINE_END
   48 init_declarator_list: init_declarator_list . COMMA init_declarator

    LINE_END  shift, and go to state 34
    COMMA     shift, and go to state 35


state 24

   47 init_declarator_list: init_declarator .

    $default  reduce using rule 47 (init_declarator_list)


state 25

    5 function_definition: declaration_specification declarator . declaration_list compound_statement
    7                    | declaration_specification declarator . compound_statement
   49 init_declarator: declarator .
   50                | declarator . ASSIGN_OP initializer
   53 declarator: declarator . OB parameter_list CB
   54           | declarator . OB CB

    VOID       shift, and go to state 1
    CHAR       shift, and go to state 2
    SHORT      shift, and go to state 3
    INT        shift, and go to state 4
    LONG       shift, and go to state 5
    FLOAT      shift, and go to state 6
    DOUBLE     shift, and go to state 7
    SIGNED     shift, and go to state 8
    UNSIGNED   shift, and go to state 9
    ASSIGN_OP  shift, and go to state 36
    OB         shift, and go to state 27
    OB_CURLY   shift, and go to state 28

    $default  reduce using rule 49 (init_declarator)

    declaration                go to state 29
    declaration_list           go to state 37
    compound_statement         go to state 38
    declaration_specification  go to state 32
    type_specification         go to state 17


state 26

   37 declaration_specification: type_specification declaration_specification .

    $default  reduce using rule 37 (declaration_specification)


state 27

   53 declarator: declarator OB . parameter_list CB
   54           | declarator OB . CB

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    CB        shift, and go to state 39

    declaration_specification  go to state 40
    type_specification         go to state 17
    parameter_list             go to state 41
    parameter_declaration      go to state 42


state 28

   13 compound_statement: OB_CURLY . declaration_list statement_list CB_CURLY
   14                   | OB_CURLY . statement_list CB_CURLY
   15                   | OB_CURLY . declaration_list CB_CURLY
   16                   | OB_CURLY . CB_CURLY

    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    SHORT               shift, and go to state 3
    INT                 shift, and go to state 4
    LONG                shift, and go to state 5
    FLOAT               shift, and go to state 6
    DOUBLE              shift, and go to state 7
    SIGNED              shift, and go to state 8
    UNSIGNED            shift, and go to state 9
    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    CB_CURLY            shift, and go to state 58
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    declaration                go to state 29
    declaration_list           go to state 65
    compound_statement         go to state 66
    statement_list             go to state 67
    statement                  go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    declaration_specification  go to state 32
    type_specification         go to state 17
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 29

   11 declaration_list: declaration .

    $default  reduce using rule 11 (declaration_list)


state 30

    6 function_definition: declarator declaration_list . compound_statement
   12 declaration_list: declaration_list . declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    OB_CURLY  shift, and go to state 28

    declaration                go to state 93
    compound_statement         go to state 94
    declaration_specification  go to state 32
    type_specification         go to state 17


state 31

    8 function_definition: declarator compound_statement .

    $default  reduce using rule 8 (function_definition)


state 32

    9 declaration: declaration_specification . init_declarator_list LINE_END
   10            | declaration_specification . LINE_END

    ID        shift, and go to state 10
    LINE_END  shift, and go to state 22
    OB        shift, and go to state 11

    init_declarator_list  go to state 23
    init_declarator       go to state 24
    declarator            go to state 95


state 33

   52 declarator: OB declarator CB .

    $default  reduce using rule 52 (declarator)


state 34

    9 declaration: declaration_specification init_declarator_list LINE_END .

    $default  reduce using rule 9 (declaration)


state 35

   48 init_declarator_list: init_declarator_list COMMA . init_declarator

    ID  shift, and go to state 10
    OB  shift, and go to state 11

    init_declarator  go to state 96
    declarator       go to state 95


state 36

   50 init_declarator: declarator ASSIGN_OP . initializer

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 98

    initializer                go to state 99
    assignment_expression      go to state 100
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 37

    5 function_definition: declaration_specification declarator declaration_list . compound_statement
   12 declaration_list: declaration_list . declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9
    OB_CURLY  shift, and go to state 28

    declaration                go to state 93
    compound_statement         go to state 101
    declaration_specification  go to state 32
    type_specification         go to state 17


state 38

    7 function_definition: declaration_specification declarator compound_statement .

    $default  reduce using rule 7 (function_definition)


state 39

   54 declarator: declarator OB CB .

    $default  reduce using rule 54 (declarator)


state 40

   57 parameter_declaration: declaration_specification . declarator
   58                      | declaration_specification .

    ID  shift, and go to state 10
    OB  shift, and go to state 11

    $default  reduce using rule 58 (parameter_declaration)

    declarator  go to state 102


state 41

   53 declarator: declarator OB parameter_list . CB
   56 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 103
    CB     shift, and go to state 104


state 42

   55 parameter_list: parameter_declaration .

    $default  reduce using rule 55 (parameter_list)


state 43

   25 labeled_statement: ID . COLON statement
  125 primary_expression: ID .

    COLON  shift, and go to state 105

    $default  reduce using rule 125 (primary_expression)


state 44

  127 primary_expression: STRING .

    $default  reduce using rule 127 (primary_expression)


state 45

  131 const: CHAR_CONST .

    $default  reduce using rule 131 (const)


state 46

  132 const: INT_CONST .

    $default  reduce using rule 132 (const)


state 47

  133 const: FLOAT_CONST .

    $default  reduce using rule 133 (const)


state 48

   71 prefix_operator: UNARY_INCREMENT_OP .

    $default  reduce using rule 71 (prefix_operator)


state 49

   72 prefix_operator: UNARY_DECREMENT_OP .

    $default  reduce using rule 72 (prefix_operator)


state 50

  138 unary_operator: BITWISE_NOT_OP .

    $default  reduce using rule 138 (unary_operator)


state 51

  135 unary_operator: MUL_OP .

    $default  reduce using rule 135 (unary_operator)


state 52

  136 unary_operator: ADD_OP .

    $default  reduce using rule 136 (unary_operator)


state 53

  137 unary_operator: SUB_OP .

    $default  reduce using rule 137 (unary_operator)


state 54

  139 unary_operator: NOT_OP .

    $default  reduce using rule 139 (unary_operator)


state 55

  134 unary_operator: AND_OP .

    $default  reduce using rule 134 (unary_operator)


state 56

   27 expression_statement: LINE_END .

    $default  reduce using rule 27 (expression_statement)


state 57

  128 primary_expression: OB . expression CB

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 106
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 58

   16 compound_statement: OB_CURLY CB_CURLY .

    $default  reduce using rule 16 (compound_statement)


state 59

   33 jump_statement: BREAK . LINE_END

    LINE_END  shift, and go to state 107


state 60

   32 jump_statement: CONTINUE . LINE_END

    LINE_END  shift, and go to state 108


state 61

   30 iteration_statement: WHILE . OB expression CB statement

    OB  shift, and go to state 109


state 62

   34 jump_statement: RETURN . expression LINE_END
   35               | RETURN . LINE_END

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 110
    OB                  shift, and go to state 57

    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 111
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 63

   28 selection_statement: IF . OB expression CB statement
   29                    | IF . OB expression CB statement ELSE statement

    OB  shift, and go to state 112


state 64

   31 jump_statement: GOTO . ID LINE_END

    ID  shift, and go to state 113


state 65

   12 declaration_list: declaration_list . declaration
   13 compound_statement: OB_CURLY declaration_list . statement_list CB_CURLY
   15                   | OB_CURLY declaration_list . CB_CURLY

    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    SHORT               shift, and go to state 3
    INT                 shift, and go to state 4
    LONG                shift, and go to state 5
    FLOAT               shift, and go to state 6
    DOUBLE              shift, and go to state 7
    SIGNED              shift, and go to state 8
    UNSIGNED            shift, and go to state 9
    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    CB_CURLY            shift, and go to state 114
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    declaration                go to state 93
    compound_statement         go to state 66
    statement_list             go to state 115
    statement                  go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    declaration_specification  go to state 32
    type_specification         go to state 17
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 66

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


state 67

   14 compound_statement: OB_CURLY statement_list . CB_CURLY
   18 statement_list: statement_list . statement

    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    CB_CURLY            shift, and go to state 116
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    compound_statement         go to state 66
    statement                  go to state 117
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 68

   17 statement_list: statement .

    $default  reduce using rule 17 (statement_list)


state 69

   19 statement: labeled_statement .

    $default  reduce using rule 19 (statement)


state 70

   20 statement: expression_statement .

    $default  reduce using rule 20 (statement)


state 71

   22 statement: selection_statement .

    $default  reduce using rule 22 (statement)


state 72

   23 statement: iteration_statement .

    $default  reduce using rule 23 (statement)


state 73

   24 statement: jump_statement .

    $default  reduce using rule 24 (statement)


state 74

  117 expression: assignment_expression .

    $default  reduce using rule 117 (expression)


state 75

   64 assignment_expression: conditional_expression .

    $default  reduce using rule 64 (assignment_expression)


state 76

   65 assignment_expression: unary_expression . assignment_operator assignment_expression
  112 multiplicative_expression: unary_expression .

    ASSIGN_OP              shift, and go to state 118
    ASSIGN_MUL_OP          shift, and go to state 119
    ASSIGN_DIV_OP          shift, and go to state 120
    ASSIGN_MOD_OP          shift, and go to state 121
    ASSIGN_ADD_OP          shift, and go to state 122
    ASSIGN_SUB_OP          shift, and go to state 123
    ASSIGN_SHIFT_LEFT_OP   shift, and go to state 124
    ASSIGN_SHIFT_RIGHT_OP  shift, and go to state 125
    ASSIGN_BITWISE_AND_OP  shift, and go to state 126
    ASSIGN_BITWISE_XOR_OP  shift, and go to state 127
    ASSIGN_BITWISE_OR_OP   shift, and go to state 128

    $default  reduce using rule 112 (multiplicative_expression)

    assignment_operator  go to state 129


state 77

   69 unary_expression: prefix_operator . unary_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression    go to state 130
    prefix_operator     go to state 77
    postfix_expression  go to state 89
    primary_expression  go to state 90
    const               go to state 91
    unary_operator      go to state 92


state 78

   66 conditional_expression: logical_or_expression .
   67                       | logical_or_expression . QUESTION_MARK expression COLON conditional_expression
   85 logical_or_expression: logical_or_expression . LOGICAL_OR_OP logical_and_expression

    LOGICAL_OR_OP  shift, and go to state 131
    QUESTION_MARK  shift, and go to state 132

    $default  reduce using rule 66 (conditional_expression)


state 79

   84 logical_or_expression: logical_and_expression .
   87 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 133

    $default  reduce using rule 84 (logical_or_expression)


state 80

   86 logical_and_expression: inclusive_or_expression .
   89 inclusive_or_expression: inclusive_or_expression . OR_OP exclusive_or_expression

    OR_OP  shift, and go to state 134

    $default  reduce using rule 86 (logical_and_expression)


state 81

   88 inclusive_or_expression: exclusive_or_expression .
   91 exclusive_or_expression: exclusive_or_expression . EXCLUSIVE_OR_OP and_expression

    EXCLUSIVE_OR_OP  shift, and go to state 135

    $default  reduce using rule 88 (inclusive_or_expression)


state 82

   90 exclusive_or_expression: and_expression .
   93 and_expression: and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 136

    $default  reduce using rule 90 (exclusive_or_expression)


state 83

   92 and_expression: equality_expression .
   95 equality_expression: equality_expression . equality_operator relational_expression

    EQUAL_OP      shift, and go to state 137
    NOT_EQUAL_OP  shift, and go to state 138

    $default  reduce using rule 92 (and_expression)

    equality_operator  go to state 139


state 84

   94 equality_expression: relational_expression .
   99 relational_expression: relational_expression . compare_operator shift_expression

    LT_OP  shift, and go to state 140
    GT_OP  shift, and go to state 141
    LE_OP  shift, and go to state 142
    GE_OP  shift, and go to state 143

    $default  reduce using rule 94 (equality_expression)

    compare_operator  go to state 144


state 85

   98 relational_expression: shift_expression .
  105 shift_expression: shift_expression . shift_operator additive_expression

    SHIFT_LEFT_OP   shift, and go to state 145
    SHIFT_RIGHT_OP  shift, and go to state 146

    $default  reduce using rule 98 (relational_expression)

    shift_operator  go to state 147


state 86

  104 shift_expression: additive_expression .
  109 additive_expression: additive_expression . additive_operator multiplicative_expression

    ADD_OP  shift, and go to state 148
    SUB_OP  shift, and go to state 149

    $default  reduce using rule 104 (shift_expression)

    additive_operator  go to state 150


state 87

  108 additive_expression: multiplicative_expression .
  113 multiplicative_expression: multiplicative_expression . multiplicative_operator unary_expression

    MUL_OP  shift, and go to state 151
    DIV_OP  shift, and go to state 152
    MOD_OP  shift, and go to state 153

    $default  reduce using rule 108 (additive_expression)

    multiplicative_operator  go to state 154


state 88

   26 expression_statement: expression . LINE_END
  118 expression: expression . COMMA assignment_expression

    LINE_END  shift, and go to state 155
    COMMA     shift, and go to state 156


state 89

   68 unary_expression: postfix_expression .
  120 postfix_expression: postfix_expression . OB argument_expression_list CB
  121                   | postfix_expression . OB CB
  122                   | postfix_expression . postfix_operator

    UNARY_INCREMENT_OP  shift, and go to state 157
    UNARY_DECREMENT_OP  shift, and go to state 158
    OB                  shift, and go to state 159

    $default  reduce using rule 68 (unary_expression)

    postfix_operator  go to state 160


state 90

  119 postfix_expression: primary_expression .

    $default  reduce using rule 119 (postfix_expression)


state 91

  126 primary_expression: const .

    $default  reduce using rule 126 (primary_expression)


state 92

   70 unary_expression: unary_operator .

    $default  reduce using rule 70 (unary_expression)


state 93

   12 declaration_list: declaration_list declaration .

    $default  reduce using rule 12 (declaration_list)


state 94

    6 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 6 (function_definition)


state 95

   49 init_declarator: declarator .
   50                | declarator . ASSIGN_OP initializer
   53 declarator: declarator . OB parameter_list CB
   54           | declarator . OB CB

    ASSIGN_OP  shift, and go to state 36
    OB         shift, and go to state 27

    $default  reduce using rule 49 (init_declarator)


state 96

   48 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 48 (init_declarator_list)


state 97

  125 primary_expression: ID .

    $default  reduce using rule 125 (primary_expression)


state 98

   60 initializer: OB_CURLY . initializer_list CB_CURLY
   61            | OB_CURLY . initializer_list COMMA CB_CURLY

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 98

    initializer                go to state 161
    initializer_list           go to state 162
    assignment_expression      go to state 100
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 99

   50 init_declarator: declarator ASSIGN_OP initializer .

    $default  reduce using rule 50 (init_declarator)


state 100

   59 initializer: assignment_expression .

    $default  reduce using rule 59 (initializer)


state 101

    5 function_definition: declaration_specification declarator declaration_list compound_statement .

    $default  reduce using rule 5 (function_definition)


state 102

   53 declarator: declarator . OB parameter_list CB
   54           | declarator . OB CB
   57 parameter_declaration: declaration_specification declarator .

    OB  shift, and go to state 27

    $default  reduce using rule 57 (parameter_declaration)


state 103

   56 parameter_list: parameter_list COMMA . parameter_declaration

    VOID      shift, and go to state 1
    CHAR      shift, and go to state 2
    SHORT     shift, and go to state 3
    INT       shift, and go to state 4
    LONG      shift, and go to state 5
    FLOAT     shift, and go to state 6
    DOUBLE    shift, and go to state 7
    SIGNED    shift, and go to state 8
    UNSIGNED  shift, and go to state 9

    declaration_specification  go to state 40
    type_specification         go to state 17
    parameter_declaration      go to state 163


state 104

   53 declarator: declarator OB parameter_list CB .

    $default  reduce using rule 53 (declarator)


state 105

   25 labeled_statement: ID COLON . statement

    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    compound_statement         go to state 66
    statement                  go to state 164
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 106

  118 expression: expression . COMMA assignment_expression
  128 primary_expression: OB expression . CB

    COMMA  shift, and go to state 156
    CB     shift, and go to state 165


state 107

   33 jump_statement: BREAK LINE_END .

    $default  reduce using rule 33 (jump_statement)


state 108

   32 jump_statement: CONTINUE LINE_END .

    $default  reduce using rule 32 (jump_statement)


state 109

   30 iteration_statement: WHILE OB . expression CB statement

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 166
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 110

   35 jump_statement: RETURN LINE_END .

    $default  reduce using rule 35 (jump_statement)


state 111

   34 jump_statement: RETURN expression . LINE_END
  118 expression: expression . COMMA assignment_expression

    LINE_END  shift, and go to state 167
    COMMA     shift, and go to state 156


state 112

   28 selection_statement: IF OB . expression CB statement
   29                    | IF OB . expression CB statement ELSE statement

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 168
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 113

   31 jump_statement: GOTO ID . LINE_END

    LINE_END  shift, and go to state 169


state 114

   15 compound_statement: OB_CURLY declaration_list CB_CURLY .

    $default  reduce using rule 15 (compound_statement)


state 115

   13 compound_statement: OB_CURLY declaration_list statement_list . CB_CURLY
   18 statement_list: statement_list . statement

    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    CB_CURLY            shift, and go to state 170
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    compound_statement         go to state 66
    statement                  go to state 117
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 116

   14 compound_statement: OB_CURLY statement_list CB_CURLY .

    $default  reduce using rule 14 (compound_statement)


state 117

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


state 118

   73 assignment_operator: ASSIGN_OP .

    $default  reduce using rule 73 (assignment_operator)


state 119

   74 assignment_operator: ASSIGN_MUL_OP .

    $default  reduce using rule 74 (assignment_operator)


state 120

   75 assignment_operator: ASSIGN_DIV_OP .

    $default  reduce using rule 75 (assignment_operator)


state 121

   76 assignment_operator: ASSIGN_MOD_OP .

    $default  reduce using rule 76 (assignment_operator)


state 122

   77 assignment_operator: ASSIGN_ADD_OP .

    $default  reduce using rule 77 (assignment_operator)


state 123

   78 assignment_operator: ASSIGN_SUB_OP .

    $default  reduce using rule 78 (assignment_operator)


state 124

   79 assignment_operator: ASSIGN_SHIFT_LEFT_OP .

    $default  reduce using rule 79 (assignment_operator)


state 125

   80 assignment_operator: ASSIGN_SHIFT_RIGHT_OP .

    $default  reduce using rule 80 (assignment_operator)


state 126

   81 assignment_operator: ASSIGN_BITWISE_AND_OP .

    $default  reduce using rule 81 (assignment_operator)


state 127

   82 assignment_operator: ASSIGN_BITWISE_XOR_OP .

    $default  reduce using rule 82 (assignment_operator)


state 128

   83 assignment_operator: ASSIGN_BITWISE_OR_OP .

    $default  reduce using rule 83 (assignment_operator)


state 129

   65 assignment_expression: unary_expression assignment_operator . assignment_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 171
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 130

   69 unary_expression: prefix_operator unary_expression .

    $default  reduce using rule 69 (unary_expression)


state 131

   85 logical_or_expression: logical_or_expression LOGICAL_OR_OP . logical_and_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    logical_and_expression     go to state 173
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 132

   67 conditional_expression: logical_or_expression QUESTION_MARK . expression COLON conditional_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 174
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 133

   87 logical_and_expression: logical_and_expression LOGICAL_AND_OP . inclusive_or_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    inclusive_or_expression    go to state 175
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 134

   89 inclusive_or_expression: inclusive_or_expression OR_OP . exclusive_or_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    exclusive_or_expression    go to state 176
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 135

   91 exclusive_or_expression: exclusive_or_expression EXCLUSIVE_OR_OP . and_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    and_expression             go to state 177
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 136

   93 and_expression: and_expression AND_OP . equality_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    equality_expression        go to state 178
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 137

   96 equality_operator: EQUAL_OP .

    $default  reduce using rule 96 (equality_operator)


state 138

   97 equality_operator: NOT_EQUAL_OP .

    $default  reduce using rule 97 (equality_operator)


state 139

   95 equality_expression: equality_expression equality_operator . relational_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    relational_expression      go to state 179
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 140

  100 compare_operator: LT_OP .

    $default  reduce using rule 100 (compare_operator)


state 141

  101 compare_operator: GT_OP .

    $default  reduce using rule 101 (compare_operator)


state 142

  102 compare_operator: LE_OP .

    $default  reduce using rule 102 (compare_operator)


state 143

  103 compare_operator: GE_OP .

    $default  reduce using rule 103 (compare_operator)


state 144

   99 relational_expression: relational_expression compare_operator . shift_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    shift_expression           go to state 180
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 145

  106 shift_operator: SHIFT_LEFT_OP .

    $default  reduce using rule 106 (shift_operator)


state 146

  107 shift_operator: SHIFT_RIGHT_OP .

    $default  reduce using rule 107 (shift_operator)


state 147

  105 shift_expression: shift_expression shift_operator . additive_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    additive_expression        go to state 181
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 148

  110 additive_operator: ADD_OP .

    $default  reduce using rule 110 (additive_operator)


state 149

  111 additive_operator: SUB_OP .

    $default  reduce using rule 111 (additive_operator)


state 150

  109 additive_expression: additive_expression additive_operator . multiplicative_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression           go to state 172
    prefix_operator            go to state 77
    multiplicative_expression  go to state 182
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 151

  114 multiplicative_operator: MUL_OP .

    $default  reduce using rule 114 (multiplicative_operator)


state 152

  115 multiplicative_operator: DIV_OP .

    $default  reduce using rule 115 (multiplicative_operator)


state 153

  116 multiplicative_operator: MOD_OP .

    $default  reduce using rule 116 (multiplicative_operator)


state 154

  113 multiplicative_expression: multiplicative_expression multiplicative_operator . unary_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    unary_expression    go to state 183
    prefix_operator     go to state 77
    postfix_expression  go to state 89
    primary_expression  go to state 90
    const               go to state 91
    unary_operator      go to state 92


state 155

   26 expression_statement: expression LINE_END .

    $default  reduce using rule 26 (expression_statement)


state 156

  118 expression: expression COMMA . assignment_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 184
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 157

  123 postfix_operator: UNARY_INCREMENT_OP .

    $default  reduce using rule 123 (postfix_operator)


state 158

  124 postfix_operator: UNARY_DECREMENT_OP .

    $default  reduce using rule 124 (postfix_operator)


state 159

  120 postfix_expression: postfix_expression OB . argument_expression_list CB
  121                   | postfix_expression OB . CB

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57
    CB                  shift, and go to state 185

    assignment_expression      go to state 186
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    argument_expression_list   go to state 187
    const                      go to state 91
    unary_operator             go to state 92


state 160

  122 postfix_expression: postfix_expression postfix_operator .

    $default  reduce using rule 122 (postfix_expression)


state 161

   62 initializer_list: initializer .

    $default  reduce using rule 62 (initializer_list)


state 162

   60 initializer: OB_CURLY initializer_list . CB_CURLY
   61            | OB_CURLY initializer_list . COMMA CB_CURLY
   63 initializer_list: initializer_list . COMMA initializer

    COMMA     shift, and go to state 188
    CB_CURLY  shift, and go to state 189


state 163

   56 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 56 (parameter_list)


state 164

   25 labeled_statement: ID COLON statement .

    $default  reduce using rule 25 (labeled_statement)


state 165

  128 primary_expression: OB expression CB .

    $default  reduce using rule 128 (primary_expression)


state 166

   30 iteration_statement: WHILE OB expression . CB statement
  118 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 156
    CB     shift, and go to state 190


state 167

   34 jump_statement: RETURN expression LINE_END .

    $default  reduce using rule 34 (jump_statement)


state 168

   28 selection_statement: IF OB expression . CB statement
   29                    | IF OB expression . CB statement ELSE statement
  118 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 156
    CB     shift, and go to state 191


state 169

   31 jump_statement: GOTO ID LINE_END .

    $default  reduce using rule 31 (jump_statement)


state 170

   13 compound_statement: OB_CURLY declaration_list statement_list CB_CURLY .

    $default  reduce using rule 13 (compound_statement)


state 171

   65 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


state 172

  112 multiplicative_expression: unary_expression .

    $default  reduce using rule 112 (multiplicative_expression)


state 173

   85 logical_or_expression: logical_or_expression LOGICAL_OR_OP logical_and_expression .
   87 logical_and_expression: logical_and_expression . LOGICAL_AND_OP inclusive_or_expression

    LOGICAL_AND_OP  shift, and go to state 133

    $default  reduce using rule 85 (logical_or_expression)


state 174

   67 conditional_expression: logical_or_expression QUESTION_MARK expression . COLON conditional_expression
  118 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 192
    COMMA  shift, and go to state 156


state 175

   87 logical_and_expression: logical_and_expression LOGICAL_AND_OP inclusive_or_expression .
   89 inclusive_or_expression: inclusive_or_expression . OR_OP exclusive_or_expression

    OR_OP  shift, and go to state 134

    $default  reduce using rule 87 (logical_and_expression)


state 176

   89 inclusive_or_expression: inclusive_or_expression OR_OP exclusive_or_expression .
   91 exclusive_or_expression: exclusive_or_expression . EXCLUSIVE_OR_OP and_expression

    EXCLUSIVE_OR_OP  shift, and go to state 135

    $default  reduce using rule 89 (inclusive_or_expression)


state 177

   91 exclusive_or_expression: exclusive_or_expression EXCLUSIVE_OR_OP and_expression .
   93 and_expression: and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 136

    $default  reduce using rule 91 (exclusive_or_expression)


state 178

   93 and_expression: and_expression AND_OP equality_expression .
   95 equality_expression: equality_expression . equality_operator relational_expression

    EQUAL_OP      shift, and go to state 137
    NOT_EQUAL_OP  shift, and go to state 138

    $default  reduce using rule 93 (and_expression)

    equality_operator  go to state 139


state 179

   95 equality_expression: equality_expression equality_operator relational_expression .
   99 relational_expression: relational_expression . compare_operator shift_expression

    LT_OP  shift, and go to state 140
    GT_OP  shift, and go to state 141
    LE_OP  shift, and go to state 142
    GE_OP  shift, and go to state 143

    $default  reduce using rule 95 (equality_expression)

    compare_operator  go to state 144


state 180

   99 relational_expression: relational_expression compare_operator shift_expression .
  105 shift_expression: shift_expression . shift_operator additive_expression

    SHIFT_LEFT_OP   shift, and go to state 145
    SHIFT_RIGHT_OP  shift, and go to state 146

    $default  reduce using rule 99 (relational_expression)

    shift_operator  go to state 147


state 181

  105 shift_expression: shift_expression shift_operator additive_expression .
  109 additive_expression: additive_expression . additive_operator multiplicative_expression

    ADD_OP  shift, and go to state 148
    SUB_OP  shift, and go to state 149

    $default  reduce using rule 105 (shift_expression)

    additive_operator  go to state 150


state 182

  109 additive_expression: additive_expression additive_operator multiplicative_expression .
  113 multiplicative_expression: multiplicative_expression . multiplicative_operator unary_expression

    MUL_OP  shift, and go to state 151
    DIV_OP  shift, and go to state 152
    MOD_OP  shift, and go to state 153

    $default  reduce using rule 109 (additive_expression)

    multiplicative_operator  go to state 154


state 183

  113 multiplicative_expression: multiplicative_expression multiplicative_operator unary_expression .

    $default  reduce using rule 113 (multiplicative_expression)


state 184

  118 expression: expression COMMA assignment_expression .

    $default  reduce using rule 118 (expression)


state 185

  121 postfix_expression: postfix_expression OB CB .

    $default  reduce using rule 121 (postfix_expression)


state 186

  129 argument_expression_list: assignment_expression .

    $default  reduce using rule 129 (argument_expression_list)


state 187

  120 postfix_expression: postfix_expression OB argument_expression_list . CB
  130 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 193
    CB     shift, and go to state 194


state 188

   61 initializer: OB_CURLY initializer_list COMMA . CB_CURLY
   63 initializer_list: initializer_list COMMA . initializer

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 98
    CB_CURLY            shift, and go to state 195

    initializer                go to state 196
    assignment_expression      go to state 100
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 189

   60 initializer: OB_CURLY initializer_list CB_CURLY .

    $default  reduce using rule 60 (initializer)


state 190

   30 iteration_statement: WHILE OB expression CB . statement

    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    compound_statement         go to state 66
    statement                  go to state 197
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 191

   28 selection_statement: IF OB expression CB . statement
   29                    | IF OB expression CB . statement ELSE statement

    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    compound_statement         go to state 66
    statement                  go to state 198
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 192

   67 conditional_expression: logical_or_expression QUESTION_MARK expression COLON . conditional_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    conditional_expression     go to state 199
    unary_expression           go to state 172
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 193

  130 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ID                  shift, and go to state 97
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    OB                  shift, and go to state 57

    assignment_expression      go to state 200
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 194

  120 postfix_expression: postfix_expression OB argument_expression_list CB .

    $default  reduce using rule 120 (postfix_expression)


state 195

   61 initializer: OB_CURLY initializer_list COMMA CB_CURLY .

    $default  reduce using rule 61 (initializer)


state 196

   63 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 63 (initializer_list)


state 197

   30 iteration_statement: WHILE OB expression CB statement .

    $default  reduce using rule 30 (iteration_statement)


state 198

   28 selection_statement: IF OB expression CB statement .
   29                    | IF OB expression CB statement . ELSE statement

    ELSE  shift, and go to state 201

    $default  reduce using rule 28 (selection_statement)


state 199

   67 conditional_expression: logical_or_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 67 (conditional_expression)


state 200

  130 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 130 (argument_expression_list)


state 201

   29 selection_statement: IF OB expression CB statement ELSE . statement

    ID                  shift, and go to state 43
    STRING              shift, and go to state 44
    CHAR_CONST          shift, and go to state 45
    INT_CONST           shift, and go to state 46
    FLOAT_CONST         shift, and go to state 47
    UNARY_INCREMENT_OP  shift, and go to state 48
    UNARY_DECREMENT_OP  shift, and go to state 49
    BITWISE_NOT_OP      shift, and go to state 50
    MUL_OP              shift, and go to state 51
    ADD_OP              shift, and go to state 52
    SUB_OP              shift, and go to state 53
    NOT_OP              shift, and go to state 54
    AND_OP              shift, and go to state 55
    LINE_END            shift, and go to state 56
    OB                  shift, and go to state 57
    OB_CURLY            shift, and go to state 28
    BREAK               shift, and go to state 59
    CONTINUE            shift, and go to state 60
    WHILE               shift, and go to state 61
    RETURN              shift, and go to state 62
    IF                  shift, and go to state 63
    GOTO                shift, and go to state 64

    compound_statement         go to state 66
    statement                  go to state 202
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    conditional_expression     go to state 75
    unary_expression           go to state 76
    prefix_operator            go to state 77
    logical_or_expression      go to state 78
    logical_and_expression     go to state 79
    inclusive_or_expression    go to state 80
    exclusive_or_expression    go to state 81
    and_expression             go to state 82
    equality_expression        go to state 83
    relational_expression      go to state 84
    shift_expression           go to state 85
    additive_expression        go to state 86
    multiplicative_expression  go to state 87
    expression                 go to state 88
    postfix_expression         go to state 89
    primary_expression         go to state 90
    const                      go to state 91
    unary_operator             go to state 92


state 202

   29 selection_statement: IF OB expression CB statement ELSE statement .

    $default  reduce using rule 29 (selection_statement)
