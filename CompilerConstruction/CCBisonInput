%{

#include <stdio.h>

#import "CCParser.h"
#import "CCScanner.h"
#import "CCSymbolTable.h"
#import "CCAbstractSyntaxTree.h"


id<CCOutput> _output;

%}

// Type Specifiers
%token VOID
%token CHAR
%token SHORT
%token INT
%token LONG
%token FLOAT
%token DOUBLE
%token SIGNED
%token UNSIGNED

// Identifier
%token ID
%token NUMBER

// Operators
%token ASSIGN_OP

// Punctations
%token LINE_END

// Whitespace
%token EOL

%%


document:
| document statement
| document EOL
;


statement: LINE_END
| declaration LINE_END
;


declaration: type_specification
| type_specification ID
| type_specification ID assignment
;


assignment: ASSIGN_OP NUMBER;


type_specification: VOID
| CHAR
| SHORT
| INT
| LONG
| FLOAT
| DOUBLE
| SIGNED
| UNSIGNED
;


%%


void start_scanning(const char *input, id<CCOutput> output)
{
    yylineno = 0;
    _output = output;
    YY_BUFFER_STATE buffer=yy_scan_string(input);
    yyparse();
//    [[CCSymbolTable sharedInstance] printSymbolTable:output];
    yy_delete_buffer(buffer);
}


int yyerror(char *s)
{
    [_output printError:[NSString stringWithFormat:@"error: %s\n", s]];
    return 0;
}